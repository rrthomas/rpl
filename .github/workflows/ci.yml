name: CI

on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies (Ubuntu)
        if: ${{ contains(matrix.os, 'ubuntu') }}
        run: sudo apt-get -y install valac libpcre2-dev libuchardet-dev gengetopt help2man
      - name: Install dependencies (macOS)
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          brew install autoconf automake vala pcre2 uchardet gengetopt help2man
          echo "$(brew --prefix m4)/bin" >> $GITHUB_PATH
      - name: Build and test
        run: |
          ./bootstrap
          ./configure && make check || ( cat test.log && exit 1 )
          sudo make install
          rpl --help
          make distcheck
      - name: Code coverage
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get -y install lcov gcovr
          ./configure --enable-code-coverage && make clean && make && make check-code-coverage && make assert-full-coverage
  # build-windows:
  #   runs-on: windows-latest
  #   defaults:
  #     run:
  #       shell: msys2 {0}
  #   strategy:
  #     matrix:
  #       include:
  #       - { sys: mingw64, env: x86_64 }
  #   steps:
  #   - uses: msys2/setup-msys2@v2
  #     with:
  #       release: false
  #       msystem: ${{matrix.sys}}
  #       install: >-
  #         patch git groff help2man gengetopt
  #         mingw-w64-${{matrix.env}}-autotools
  #         mingw-w64-${{matrix.env}}-pkg-config
  #         mingw-w64-${{matrix.env}}-gcc
  #         mingw-w64-${{matrix.env}}-vala
  #         mingw-w64-${{matrix.env}}-glib2
  #         mingw-w64-${{matrix.env}}-pcre2
  #         mingw-w64-${{matrix.env}}-uchardet
  #   - uses: actions/checkout@v4
  #     with: { submodules: true }
  #   - name: Bootstrap (gnulib and autoreconf)
  #     run: ./bootstrap
  #   - name: Build and test
  #     run: ./configure && make check && make distcheck
